<<<<<<< HEAD
1. поле для функций Захара:

2. поле для функций Кати Б.:
class User {
    username: string;
    password: string;
    online: boolean;
    verified: boolean;
    phoneNumber: string;
    age: number;
    cardNumber: string;
    geo: string;
    balance: { [key: string]: number };

    constructor(username: string, password: string) {
        this.username = username;
        this.password = password;
        this.online = false;
        this.verified = false;
        this.phoneNumber = "";
        this.age = 0;
        this.cardNumber = "";
        this.geo = "";
        this.balance = {};
    }

    signIn(): { status: number, text: string, message: string } {
        if (this.online) {
            return { status: 400, text: "Bad Request", message: "User is already signed in." };
        }

        this.online = true;
        return { status: 200, text: "OK", message: "Sign in success!" };
    }

    verify(password: string, phoneNumber: string, age: number, cardNumber: string, geo: string): { status: number, text: string, message: string } {
        if (this.verified) {
            return { status: 400, text: "Bad Request", message: "User is already verified." };
        }

        if (!this.phoneNumber && phoneNumber) {
            this.phoneNumber = phoneNumber;
        }
        if (!this.age && age) {
            this.age = age;
        }
        if (!this.cardNumber && cardNumber) {
            this.cardNumber = cardNumber;
        }
        if (!this.geo && geo) {
            this.geo = geo;
        }

        if (this.password === password) {
            this.verified = true;
            return { status: 200, text: "OK", message: "Verification success!" };
        } else {
            return { status: 401, text: "Unauthorized", message: "Verification failed." };
        }
    }
// для обновления баланса пользователя
    updateUserBalance(currency: string, amount: number): { status: number, text: string, message: string } {
        if (this.balance[currency] === undefined) {
            return { status: 400, text: "Bad Request", message: "Currency not found in user's balance." };
        }

        this.balance[currency] += amount;

        return { status: 200, text: "OK", message: "User balance updated successfully!" };
    }
}

3. поле для функций Карины: 

interface Response {
    status: number;
    text: string;
    message: string;
}

function checkPhoneNumber(phoneNumber: string): Response {
    const validPhoneNumber = "1234567890";

    if (phoneNumber === validPhoneNumber) {
        return { status: 200, text: "OK", message: "login success" };
    } else {
        return { status: 401, text: "Unauthorized", message: "Invalid phone number" };
    }
}

function additionalFunction(): Response {
    return { status: 200, text: "OK", message: "Additional function executed successfully" };
}


const phoneNumber = "1234567890";
const result = checkPhoneNumber(phoneNumber);
console.log(result);

const additionalResult = additionalFunction();
console.log(additionalResult);


3. поле для функций Кати С.:

4. поле для функций Полины:

при добавлении подпишите, какую функцию добавляете, от себя или по заданию, и какую
всем удачи вы справитесь !!!!
=======
что-то
здесь был мамонгасик
так надо
>>>>>>> aee2dc04b2cdc8611b7c9000176571c4ad501750
